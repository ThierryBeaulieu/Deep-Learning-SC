// Generated by CIRCT firtool-1.62.0
module NeuralNetwork(
  input        clock,
               reset,
  input  [7:0] s_axis_tdata,
  input  [1:0] s_axis_tkeep,
  input        s_axis_tvalid,
               s_axis_tlast,
  output       s_axis_tready,
  output [7:0] m_axis_tdata,
  output [1:0] m_axis_tkeep,
  output       m_axis_tvalid,
               m_axis_tlast,
  input        m_axis_tready
);

  wire [7:0][3:0] _GEN = '{4'h1, 4'h1, 4'hF, 4'hC, 4'h8, 4'h4, 4'h2, 4'h1};
  reg             sending;
  reg  [8:0]      sendCounter;
  wire            _GEN_0 = sendCounter == 9'h5;
  always @(posedge clock) begin
    if (reset) begin
      sending <= 1'h0;
      sendCounter <= 9'h0;
    end
    else begin
      sending <= ~(sending & _GEN_0) & (s_axis_tvalid & s_axis_tlast | sending);
      if (sending) begin
        if (_GEN_0)
          sendCounter <= 9'h0;
        else
          sendCounter <= sendCounter + 9'h1;
      end
    end
  end // always @(posedge)
  assign s_axis_tready = 1'h1;
  assign m_axis_tdata = sending ? {4'h0, _GEN[sendCounter[2:0]]} : 8'h0;
  assign m_axis_tkeep = 2'h1;
  assign m_axis_tvalid = sending;
  assign m_axis_tlast = sending & _GEN_0;
endmodule

